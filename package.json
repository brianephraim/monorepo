{
  "private": true,
  "privateFromGithub": true,
  "name": "redux-todos-example",
  "version": "0.0.0",
  "description": "Redux ToDos example",
  "scripts": {
    "start": "npm run runProductionBundle",
    "runProductionBundle": "node ./packages/dev_env/universal/buildServer/main.js --servers='bernieserver,junk-express'",
    "just-bundle-prod": "npm run dev -- --servers='bernieserver,junk-express' --isDev=false --isUniversal=true --isDeploy=true --initialApp='./packages/MainApp/MainApp.js'",
    "dev1": "npm run dev -- --servers='bernieserver,junk-express' --isDev=true --isUniversal=false --isDeploy=false --initialApp='./packages/MainApp/MainApp.js'",
    "dev2": "npm run dev -- --servers='bernieserver,junk-express' --isDev=true --isUniversal=true --isDeploy=false --initialApp='./packages/MainApp/MainApp.js'",
    "prod": "npm run dev -- --servers='bernieserver,junk-express' --isDev=false --isUniversal=true --isDeploy=false --initialApp='./packages/MainApp/MainApp.js'",
    "deploy": "bash deploy.sh",
    "blank1": "___________",
    "blank2": "___________",
    "deps": "npm run prepare-deps && npm run transfer-deps && rm ./package-combined.json",
    "prepare-deps": "./packages/npm-deps/bin/npm-deps < package.json > package-combined.json --silent",
    "transfer-deps": "node ./packages/npm-deps/transfer-deps.js ./package-combined.json ./package.json",
    "npm-dps": "/Users/brianephraim/Sites/npm-deps/bin/npm-deps < package.json > package-combined.json",
    "tail": "heroku logs --app berniereact --tail",
    "tail2": "heroku logs --app fierce-headland-6196 --tail",
    "prettier": "./node_modules/.bin/prettier --single-quote --trailing-comma es5 --write \"packages/profile-framer-frontend/**/*.js\"",
    "eslintfix": "./node_modules/.bin/eslint --fix  packages/profile-framer-frontend",
    "mono": "./packages/mono-to-multirepo/bin/mono-to-multirepo.js --i",
    "testpackages": "./packages/dev_env/bin/devenv.js --env=test",
    "test": "./packages/dev_env/bin/devenv.js --env=test --testdevenv",
    "dev": "./packages/dev_env/bin/devenv.js",
    "bern0": "npm run dev -- --servers='bernieserver,junk-express' --use-dist --isDev=true --isUniversal=false",
    "bern1": "npm run dev1",
    "bern2": "npm run dev2",
    "bern3": "npm run prod",
    "bern4": "npm run just-bundle-prod",
    "bern5": "npm run runProductionBundle",
    "bern": "npm run devenvnode /Users/brianephraim/Sites/monorepo/packages/bernieserver/bernieserver.js",
    "devusedist": "npm run dev -- --use-dist",
    "item": "npm_run_item(){ (./packages/dev_env/bin/devenv.js --item=$1) };npm_run_item",
    "devenvnode": "./packages/dev_env/bin/devenv-node.js",
    "new": "npm run devenvnode ./packages/mono-to-multirepo/mono-to-multirepo.js -- --i",
    "lernahoist": "lerna bootstrap --hoist",
    "lernahoistX": "lerna bootstrap --hoist --concurrency 1",
    "lernahoist3": "./packages/dev_env/bin/lernahoist.js",
    "lernahoist2": "lerna bootstrap --hoist",
    "devenvnode3": "npm_run_item(){ (cd ./packages/dev_env && ./node_modules/.bin/babel-node ./babelXXXX.start.js --entry=$1 --output=$2) };npm_run_item",
    "devenvnode2": "npm_run_item(){ (cd ./packages/dev_env && ./bin/devenv.js --entry=$1 --output=$2) };npm_run_item",
    "mono-to-multirepo": "babel-node ./packages/mono-to-multirepo/mono-to-multirepo.js",
    "new2": "npm run mono-to-multirepo -- --i",
    "scatter": "npm run mono-to-multirepo -- --m='scattered from monorepo'",
    "both": "./node_modules/stmux/bin/stmux.js -M -- [ \"npm run dev\" .. \"npm run test\" ]",
    "asdf": "(cd ./packages/study && npm run start)",
    "startx": "babel-node devServer.js",
    "lint": "eslint --fix src server webpack",
    "testx": "./node_modules/mocha/bin/mocha src/**/*.spec.js --reporter spec",
    "echox": "SHA=${SHA:-};xx=1000; echo $((11 + $xx)) && echo \"xx-$SHA-xx\"",
    "echo1": "echo $npm_config_asdf",
    "echo2": "echo asdf && read varname && echo \"aaa $varname aaa\"",
    "echo3": "a(){ echo $2 $1; };a",
    "test2": "node ./packages/dev_env/babelXXXX.start.js --env=test",
    "devold": "node ./packages/dev_env/babelXXXX.start.js",
    "item2": "npm_run_item(){ (cd ./packages/$1 && npm run start) };npm_run_item",
    "item3": "./packages/dev_env/bin/devenv.js --item=study",
    "dd": "(cd /Users/brianephraim/Sites/test-project-for-dev-env/ && npm run dev)",
    "startxxx": "npm run clean && cross-env NODE_ENV=development babel-watch ./packages/dev_env/universal/server/index.js",
    "start:prod": "npm run build && npm run serve",
    "serve": "cross-env NODE_ENV=production ./node_modules/.bin/babel-node ./packages/dev_env/universal/buildServer/index.js",
    "serve2": "npm run build:node && cross-env NODE_ENV=production ./node_modules/.bin/babel-node ./packages/dev_env/universal/buildServer/index.js",
    "build": "npm run build:client && npm run build:server && npm run build:node",
    "build:client": "rimraf ./packages/dev_env/universal/buildClient && cross-env NODE_ENV=production webpack --progress -p --config ./packages/dev_env/universal/webpack/client.prod.js",
    "build:server": "rimraf ./packages/dev_env/universal/buildServer && cross-env NODE_ENV=production webpack --progress -p --config ./packages/dev_env/universal/webpack/server.prod.js",
    "build:node": "cross-env NODE_ENV=production babel ./packages/dev_env/universal/server/index.js -o ./packages/dev_env/universal/buildServer/index.js && babel ./packages/dev_env/universal/server/api.js -o ./packages/dev_env/universal/buildServer/api.js",
    "clean": "rimraf ./packages/monorepo/dev_env/universal/buildClient ./packages/monorepo/dev_env/universal/buildServer",
    "precommit": "lint-staged --verbose",
    "cm": "git-cz",
    "format": "prettier --single-quote --semi=false --write '{src,server,webpack}/**/*.js' && npm run lint"
  },
  "publishConfig": {
    "access": "public"
  },
  "license": "MIT",
  "devDependencies": {
    "eslint-config-prettier": "^2.3.0",
    "prettier": "^1.5.3",
    "lerna": "^2.2.0"
  },
  "dependencies": {
  }
}
